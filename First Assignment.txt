Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = business_id 10000 
ii. Hours = business_id 1562
iii. Category = business_id 2643
iv. Attribute = business_id 1115
v. Review = business_id 8090, user_id 9581, id 10000
vi. Checkin = business_id 493
vii. Photo = business_id 6493
viii. Tip = user_id 537, business_id 3979
ix. User = id 10000
x. Friend = user_id 11
xi. Elite_years = user_id 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	
	
	SQL code used to arrive at answer: 

Select Count(*)
FROM User
Where Null in (Name, 
review_count, 
yelping_since, 
useful, 
funny, 
cool, 
fans,
average_stars, 
compliment_hot, 
compliment_cute, 
compliment_more, 
compliment_profile,
compliment_list, 
compliment_note, 
compliment_plain, 
compliment_cool, 
compliment_funny, 
compliment_writer, 
compliment_photos)
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

Select city, sum(review_count) AS reviews
FROM business
GROUP BY city
ORDER BY reviews DESC
	
	Copy and Paste the Result Below:
	
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select stars, sum(review_count) as count
FROM business
WHERE city == 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

Select stars, sum(review_count) as count
FROM business
WHERE city == 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
Select name, 
id, 
review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
		
	Copy and Paste the Result Below:
		
+--------+------------------------+--------------+
| name   | id                     | review_count |
+--------+------------------------+--------------+
| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
+--------+------------------------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Posting more reviews can correlate with more fans, however it doesn't just end there. It can also depend on how long someone has been making reviews,
and the quality of their reviews. If they're descriptive enough with their posts, they are more than likely to attract fans. 

SELECT id,
name,
review_fans,
yelping_since
FROM user
ORDER BY fans DESC

+------------------------+-----------+--------------+------+---------------------+
| id                     | name      | review_count | fans | yelping_since       |
+------------------------+-----------+--------------+------+---------------------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 | 2007-07-19 00:00:00 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 | 2009-07-08 00:00:00 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 | 2009-02-05 00:00:00 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 | 2015-02-19 00:00:00 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 | 2012-04-05 00:00:00 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 | 2009-05-31 00:00:00 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 | 2007-08-29 00:00:00 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 | 2010-10-01 00:00:00 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 | 2007-03-10 00:00:00 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 | 2005-08-07 00:00:00 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 | 2012-10-08 00:00:00 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 | 2008-02-16 00:00:00 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 | 2009-09-07 00:00:00 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
+------------------------+-----------+--------------+------+---------------------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: 1780 Love, 232 hate

	
	SQL code used to arrive at answer:

Select COUNT(*)					Select COUNT(*)
FROM review					FROM review
WHERE text LIKE '%love%'			WHERE text LIKE '%hate%'		


	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
Select id, 
name, 
fans
FROM user
ORDER BY fans DESC
LIMIT 10	
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

The stores had somewhat the same amount of hours. Desert medical equipment, however, was an exception as they only work on weekdays. The rest of the stores were open for either 6 or 7 days in the week.

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes. Two of the stores that are analyzed have under 10 reviews, while the other two stores have over 10 reviews.          
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Walgreens and Wooly Wonders both have the same postal code, while Red Rock and Desert Medical have different postal codes. With this information, I can come up with the conclusion that the area that Walgreens and Wooly Wonders is located in 
are contributing factors faor their low scores. 

SQL code used for analysis:

Select b.city, 
b.name, 
b.postal_code,
b.stars, 
c.category, 
b.review_count, 
h.hours,
CASE
   WHEN b.stars BETWEEN 2 and 3.5 then '2-3.5 Stars'
   WHEN b.stars BETWEEN 4 and 5 then '4-5 stars'
   END AS ratings
from business b
INNER JOIN Category c ON b.id = c.business_id
INNER JOIN hours h ON b.id = h.business_id
WHERE City = 'Las Vegas' AND category = 'Shopping'
Order By stars ASC		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         The businesses that are open seem to have slightly higher stars than the businesses that are closed.
         
ii. Difference 2:
         Under the average column, open businesses have a higher average than closed businesses.
         
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(id)) as ID,
	AVG(review_count) AS Average,
	SUM(review_count) AS sum,
	AVG(stars) AS stars,
	is_open
FROM business
GROUP BY is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

I chose to compare the users by looking at the year they've been yelping, the year they become an elite member (by looking at the elite years table), and seeing how many fans they have.          
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

There wasn't a lot of information I needed to gather for this. Of course I needed the name of the users. After that I got their review count, since you'll need a certain amount of yelps to be considered an elite member. Once I gathered that, I gathered the information on how long they've been yelping, when they became an elite member, and finally how many fans that they have.
I chose this because I wanted to see if there was a correlation between the time since the user became an elite member to how many fans they would have.                           
                  
iii. Output of your finished dataset:

So from this data, the member with the highest fans, Lissa, has about 120 fans. She's been yelping since 2007, then she became an elite member in 2013. I would also like to point out that she has an extremely high amount of reviews, adding up to 834. Although it isn't the highest amount on the list (which belongs to Ed at around 904 reviews), she still holds the most amount of fans, and the only person with fans at the triple digits.
Muang, on the other hand, has around 54 reviews, became an elite member at 2017, and has 0 fans. We know that the average review count is 24.2995 from running SELECT avg(review_count) FROM user, and we also know that the average fans are 1.4896 from running a similar code, except changing review_count to fans. So what I can gather, the higher review count a person has, correlating with how long they've been using the app, the more fans they'll have. 
         
iv. Provide the SQL code you used to create your final dataset:

SELECT u.name, 
u.review_count, 
u.yelping_since, 
e.year, 
u.fans
FROM user u
INNER JOIN elite_years e ON u.id = e.user_id
group by name
order by fans desc